<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="erpMapper.NoticeMapper">

	<select id="selectNoticesByCompany" parameterType="map" resultType="ErpNotice">
        SELECT id, company_id, title, content, view_count, created_at, updated_at
        FROM business_notice
        WHERE company_id = #{companyId} AND deleted_yn = 'N'
        ORDER BY id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

	<select id="countNoticesByCompany" parameterType="long"
		resultType="int">
		SELECT COUNT(*) FROM business_notice WHERE company_id =
		#{companyId} AND
		deleted_yn = 'N'
	</select>

	<resultMap id="NoticeResultMap" type="ErpNotice">
		<id property="id" column="notice_id" />
		<result property="companyId" column="company_id" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="createdAt" column="created_at" />
		<result property="viewCount" column="view_count"/>
		<collection property="images" ofType="ErpNoticeImage">
			<id property="id" column="image_id" />
			<result property="filePath" column="image_file_path" />
			<result property="displayOrder" column="display_order" />
		</collection>
		<collection property="files" ofType="ErpNoticeFile">
			<id property="id" column="file_id" />
			<result property="originalFilename" column="original_filename" />
			<result property="filePath" column="attachment_file_path" />
		</collection>
	</resultMap>

    <select id="selectNoticeById" parameterType="map" resultMap="NoticeResultMap">
        SELECT 
            n.id AS notice_id, n.company_id, n.title, n.content, n.view_count, n.created_at,
            i.id AS image_id, i.file_path AS image_file_path, i.display_order,
            f.id AS file_id, f.original_filename, f.file_path AS attachment_file_path
        FROM business_notice n
        LEFT JOIN notice_image i ON n.id = i.notice_id
        LEFT JOIN notice_file f ON n.id = f.notice_id
        WHERE n.company_id = #{companyId} AND n.id = #{noticeId} AND n.deleted_yn = 'N'
        ORDER BY i.display_order ASC
    </select>

	<insert id="insertNoticeImages" parameterType="list">
		INSERT INTO notice_image (notice_id, company_id, file_path,
		display_order)
		VALUES
		<foreach collection="list" item="image" separator=",">
			(#{image.noticeId}, #{image.companyId}, #{image.filePath},
			#{image.displayOrder})
		</foreach>
	</insert>

	<delete id="deleteImagesByNoticeId" parameterType="long">
		DELETE FROM
		notice_image WHERE notice_id = #{noticeId}
	</delete>

	<insert id="insertNotice" parameterType="ErpNotice"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO business_notice
		(company_id, title, content)
		VALUES (#{companyId}, #{title},
		#{content})
	</insert>

	<update id="updateNotice" parameterType="ErpNotice">
		UPDATE business_notice
		SET title = #{title},
		content = #{content},
		updated_at =
		CURRENT_TIMESTAMP
		WHERE id = #{id} AND company_id = #{companyId}
	</update>

	<insert id="insertNoticeFiles" parameterType="list">
		INSERT INTO notice_file (notice_id, company_id, original_filename,
		saved_filename, file_path, file_size)
		VALUES
		<foreach collection="list" item="file" separator=",">
			(#{file.noticeId}, #{file.companyId}, #{file.originalFilename},
			#{file.savedFilename}, #{file.filePath}, #{file.fileSize})
		</foreach>
	</insert>

	<update id="softDeleteNotice" parameterType="map">
		UPDATE
		business_notice SET deleted_yn = 'Y', updated_at = CURRENT_TIMESTAMP
		WHERE id = #{noticeId} AND company_id = #{companyId}
	</update>
	<delete id="deleteImagesByIds" parameterType="list">
		DELETE FROM notice_image
		WHERE id IN
		<foreach collection="list" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

	<delete id="deleteFilesByIds" parameterType="list">
		DELETE FROM notice_file
		WHERE id IN
		<foreach collection="list" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
	<delete id="deleteFilesByNoticeId" parameterType="map">
		DELETE FROM
		notice_file WHERE notice_id = #{noticeId} AND company_id =
		#{companyId}
	</delete>
	<update id="incrementNoticeViewCount" parameterType="long">
        UPDATE business_notice SET view_count = view_count + 1 WHERE id = #{noticeId}
    </update>
</mapper>