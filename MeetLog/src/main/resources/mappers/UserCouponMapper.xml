<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.UserCouponDAO">

    <!-- UserCoupon ResultMap -->
    <resultMap id="UserCouponResultMap" type="model.UserCoupon">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="couponId" column="coupon_id"/>
        <result property="receivedAt" column="received_at"/>
        <result property="usedAt" column="used_at"/>
        <result property="isUsed" column="is_used"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="validity" column="validity"/>
        <result property="restaurantName" column="restaurant_name"/>
    </resultMap>

    <!-- 사용자의 모든 쿠폰 조회 -->
    <select id="getUserCoupons" parameterType="int" resultMap="UserCouponResultMap">
        SELECT uc.id,
               uc.user_id,
               uc.coupon_id,
               uc.received_at,
               uc.used_at,
               uc.is_used,
               c.title,
               c.description,
               c.validity,
               r.name as restaurant_name
        FROM user_coupons uc
        JOIN coupons c ON uc.coupon_id = c.id
        JOIN restaurants r ON c.restaurant_id = r.id
        WHERE uc.user_id = #{userId}
        ORDER BY uc.received_at DESC
    </select>

    <!-- 사용자의 사용 가능한 쿠폰 조회 -->
    <select id="getAvailableUserCoupons" parameterType="int" resultMap="UserCouponResultMap">
        SELECT uc.id,
               uc.user_id,
               uc.coupon_id,
               uc.received_at,
               uc.used_at,
               uc.is_used,
               c.title,
               c.description,
               c.validity,
               r.name as restaurant_name
        FROM user_coupons uc
        JOIN coupons c ON uc.coupon_id = c.id
        JOIN restaurants r ON c.restaurant_id = r.id
        WHERE uc.user_id = #{userId} AND uc.is_used = 0
        ORDER BY uc.received_at DESC
    </select>

    <!-- 사용자의 사용한 쿠폰 조회 -->
    <select id="getUsedUserCoupons" parameterType="int" resultMap="UserCouponResultMap">
        SELECT uc.id,
               uc.user_id,
               uc.coupon_id,
               uc.received_at,
               uc.used_at,
               uc.is_used,
               c.title,
               c.description,
               c.validity,
               r.name as restaurant_name
        FROM user_coupons uc
        JOIN coupons c ON uc.coupon_id = c.id
        JOIN restaurants r ON c.restaurant_id = r.id
        WHERE uc.user_id = #{userId} AND uc.is_used = 1
        ORDER BY uc.used_at DESC
    </select>

    <!-- 사용자 쿠폰 총 개수 -->
    <select id="getUserCouponCount" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM user_coupons
        WHERE user_id = #{userId}
    </select>

    <!-- 사용 가능한 쿠폰 개수 -->
    <select id="getAvailableCouponCount" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM user_coupons
        WHERE user_id = #{userId} AND is_used = 0
    </select>

    <!-- 사용자에게 쿠폰 지급 -->
    <insert id="giveCouponToUser" parameterType="model.UserCoupon" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_coupons (user_id, coupon_id, received_at, is_used)
        VALUES (#{userId}, #{couponId}, NOW(), 0)
    </insert>

    <!-- 쿠폰 사용 처리 -->
    <update id="useCoupon" parameterType="int">
        UPDATE user_coupons
        SET is_used = 1, used_at = NOW()
        WHERE id = #{userCouponId}
    </update>

</mapper>