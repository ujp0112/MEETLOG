<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.AuthMapper">
  <resultMap id="AppUserMap" type="dto.AppUser">
    <id property="id" column="id"/>
    <result property="companyId" column="company_id"/>
    <result property="branchId" column="branch_id"/>
    <result property="role" column="role"/>
    <result property="email" column="email"/>
    <result property="pwHash" column="pw_hash"/>
    <result property="activeYn" column="active_yn"/>
    <result property="name" column="name"/>
  </resultMap>
  
  <resultMap id="PendingBranchMap" type="dto.Branch">
      <id property="id" column="branch_id"/>
      <result property="name" column="branch_name"/>
      <result property="companyId" column="company_id"/>
      <association property="user" javaType="dto.AppUser">
          <id property="id" column="user_id"/>
          <result property="email" column="user_email"/>
      </association>
  </resultMap>

  <select id="findByEmail" parameterType="map" resultMap="AppUserMap">
    SELECT * FROM app_user WHERE email=#{email} AND active_yn='Y' LIMIT 1
  </select>

  <select id="findHqByIdentifier" parameterType="map" resultMap="AppUserMap">
    SELECT u.* FROM app_user u
    WHERE u.role='HQ'
      AND (u.email=#{identifier} OR u.id=#{identifier})
      AND u.active_yn='Y'
    LIMIT 1
  </select>

  <insert id="insertCompany" useGeneratedKeys="true" keyProperty="id" parameterType="dto.Company">
    INSERT INTO company (name) VALUES (#{name})
  </insert>

  <insert id="insertBranch" useGeneratedKeys="true" keyProperty="id" parameterType="dto.Branch">
    INSERT INTO branch (company_id, name, active_yn)
    VALUES (#{companyId}, #{name}, #{activeYn})
  </insert>

  <insert id="insertUser" useGeneratedKeys="true" keyProperty="id" parameterType="dto.AppUser">
    INSERT INTO app_user (company_id, branch_id, role, email, pw_hash, active_yn)
    VALUES (#{companyId}, #{branchId}, #{role}, #{email}, #{pwHash}, #{activeYn})
  </insert>
  
  <select id="findPendingBranchesByCompany" parameterType="map" resultMap="PendingBranchMap">
    SELECT
        b.id AS branch_id,
        b.name AS branch_name,
        b.company_id,
        u.id AS user_id,
        u.email AS user_email
    FROM branch b
    JOIN app_user u ON b.id = u.branch_id AND b.company_id = u.company_id
    WHERE b.company_id = #{companyId}
      AND b.active_yn = 'N'
      AND u.role = 'BRANCH'
  </select>

  <update id="updateBranchActive" parameterType="map">
    UPDATE branch
    SET    active_yn = #{activeYn}
    WHERE  id = #{branchId}
      AND  company_id = #{companyId}
  </update>

  <update id="updateUserActive" parameterType="map">
    UPDATE app_user
    SET    active_yn = #{activeYn}
    WHERE  id = #{userId}
      AND  company_id = #{companyId}
  </update>
</mapper>
