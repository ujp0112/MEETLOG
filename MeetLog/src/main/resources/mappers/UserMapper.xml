<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.UserDAO">

    <resultMap id="userResultMap" type="model.User" autoMapping="true">
        <id property="id" column="id" />
        <result property="userType" column="user_type"/>
        <result property="profileImage" column="profile_image"/>
        <result property="followerCount" column="follower_count"/>
        <result property="followingCount" column="following_count"/>
        <result property="isActive" column="is_active"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <select id="findByEmail" parameterType="string" resultMap="userResultMap">
        SELECT * FROM users WHERE email = #{email} AND is_active = true
    </select>

    <select id="findByNickname" parameterType="string" resultMap="userResultMap">
        SELECT * FROM users WHERE nickname = #{nickname} AND is_active = true
    </select>
    
    <select id="findById" parameterType="int" resultMap="userResultMap">
        SELECT * FROM users WHERE id = #{id} AND is_active = true
    </select>
    
    <select id="findAll" resultMap="userResultMap">
        SELECT * FROM users WHERE is_active = true
    </select>

    <insert id="insert" parameterType="model.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users 
            (email, nickname, password, user_type, name, phone, address, profile_image, created_at, updated_at)
        VALUES 
            (#{email}, #{nickname}, #{password}, #{userType}, #{name}, #{phone}, #{address}, #{profileImage}, NOW(), NOW())
    </insert>

    <update id="update" parameterType="model.User">
        UPDATE users SET 
            nickname = #{nickname}, 
            user_type = #{userType}, 
            profile_image = #{profileImage},
            name = #{name},
            phone = #{phone},
            address = #{address},
            updated_at = NOW() 
        WHERE id = #{id}
    </update>
    
    <update id="updatePassword" parameterType="map">
        UPDATE users SET password = #{password}, updated_at = NOW() WHERE id = #{id}
    </update>

    <update id="delete" parameterType="int">
        UPDATE users SET is_active = false, updated_at = NOW() WHERE id = #{id}
    </update>
</mapper>