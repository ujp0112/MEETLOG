<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.BusinessUserDAO">
    <insert id="insert" parameterType="model.BusinessUser">
        INSERT INTO business_users (user_id, business_name, owner_name, business_number, created_at, updated_at)
        VALUES (#{userId}, #{businessName}, #{ownerName}, #{businessNumber}, NOW(), NOW())
    </insert>

    <select id="findByUserId" parameterType="int" resultType="model.BusinessUser">
        SELECT 
            bu.id,
            bu.user_id as userId,
            bu.business_name as businessName,
            bu.owner_name as ownerName,
            bu.business_number as businessNumber,
            bu.created_at as createdAt,
            bu.updated_at as updatedAt,
            u.email,
            u.nickname,
            u.password,
            u.profile_image as profileImage
        FROM business_users bu
        JOIN users u ON bu.user_id = u.id
        WHERE bu.user_id = #{userId}
    </select>

    <select id="findByBusinessNumber" parameterType="string" resultType="model.BusinessUser">
        SELECT 
            bu.id,
            bu.user_id as userId,
            bu.business_name as businessName,
            bu.owner_name as ownerName,
            bu.business_number as businessNumber,
            bu.created_at as createdAt,
            bu.updated_at as updatedAt,
            u.email,
            u.nickname,
            u.password,
            u.profile_image as profileImage
        FROM business_users bu
        JOIN users u ON bu.user_id = u.id
        WHERE bu.business_number = #{businessNumber}
    </select>

    <update id="update" parameterType="model.BusinessUser">
        UPDATE business_users 
        SET 
            business_name = #{businessName},
            owner_name = #{ownerName},
            business_number = #{businessNumber},
            updated_at = NOW()
        WHERE user_id = #{userId}
    </update>

    <delete id="deleteByUserId" parameterType="int">
        DELETE FROM business_users WHERE user_id = #{userId}
    </delete>

    <select id="findAll" resultType="model.BusinessUser">
        SELECT 
            bu.id,
            bu.user_id as userId,
            bu.business_name as businessName,
            bu.owner_name as ownerName,
            bu.business_number as businessNumber,
            bu.created_at as createdAt,
            bu.updated_at as updatedAt,
            u.email,
            u.nickname,
            u.password,
            u.profile_image as profileImage
        FROM business_users bu
        JOIN users u ON bu.user_id = u.id
        ORDER BY bu.created_at DESC
    </select>
</mapper>