<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.ReviewDAO">
	<resultMap id="reviewResultMap" type="Review"
		autoMapping="true">
		<id property="id" column="id" />
		<result property="restaurantId" column="restaurant_id" />
		<result property="userId" column="user_id" />
		<result property="authorImage" column="author_image" />
		<result property="images" column="images"
			typeHandler="typehandler.JsonArrayTypeHandler" />
		<result property="keywords" column="keywords"
			typeHandler="typehandler.JsonArrayTypeHandler" />
		<result property="isActive" column="is_active" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>

	<select id="getRecentReviewsWithInfo" parameterType="int"
		resultType="model.ReviewInfo">
		SELECT
		r.id,
		r.content,
		r.rating,
		r.author,
		r.created_at AS createdAt,
		r.author_image AS authorImage, /* 이 줄을 추가하세요! */
		res.id AS restaurantId,
		res.name AS restaurantName
		FROM
		reviews r
		JOIN
		restaurants res ON r.restaurant_id = res.id
		WHERE
		r.is_active = true
		ORDER BY
		r.created_at DESC
		LIMIT #{limit}
	</select>
	<select id="findRecentReviews" parameterType="int"
		resultMap="reviewResultMap">
		SELECT * FROM reviews WHERE is_active = true ORDER BY
		created_at DESC LIMIT
		#{limit}
	</select>

	<select id="findByRestaurantId" parameterType="int"
		resultMap="reviewResultMap">
		SELECT * FROM reviews WHERE restaurant_id = #{restaurantId}
		AND is_active =
		true ORDER BY created_at DESC
	</select>

	<select id="findByUserId" parameterType="int"
		resultMap="reviewResultMap">
		SELECT * FROM reviews WHERE user_id = #{userId} AND
		is_active = true ORDER
		BY created_at DESC
	</select>

	<insert id="insert" parameterType="Review"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO reviews
		(restaurant_id, user_id, author, author_image, rating,
		content, images,
		keywords, created_at, updated_at)
		VALUES (#{restaurantId}, #{userId},
		#{author}, #{authorImage}, #{rating},
		#{content},
		#{images,
		typeHandler=typehandler.JsonArrayTypeHandler},
		#{keywords,
		typeHandler=typehandler.JsonArrayTypeHandler}, NOW(), NOW())
	</insert>

	<update id="delete" parameterType="int">
		UPDATE reviews SET is_active =
		false, updated_at = NOW() WHERE id = #{id}
	</update>

	<update id="likeReview" parameterType="int">
		UPDATE reviews SET likes =
		likes + 1, updated_at = NOW() WHERE id = #{id}
	</update>
	<select id="findRecentByUserId" parameterType="map" resultMap="reviewResultMap">
        SELECT * FROM reviews 
        WHERE user_id = #{userId} AND is_active = true 
        ORDER BY created_at DESC
        LIMIT #{limit}
    </select>
</mapper>