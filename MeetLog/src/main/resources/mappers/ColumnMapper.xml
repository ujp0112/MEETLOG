<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ColumnDAO">
	<resultMap id="columnResultMap" type="model.Column" autoMapping="true">
		<id property="id" column="id" />
		<result property="userId" column="user_id" />
		<result property="authorImage" column="author_image" />
		<result property="tags" column="tags" typeHandler="typehandler.JsonArrayTypeHandler" />
		<result property="isActive" column="is_active" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
	</resultMap>

    <select id="findAll" resultMap="columnResultMap">
        SELECT * FROM columns WHERE is_active = true ORDER BY created_at DESC
    </select>

	<select id="findTopColumns" parameterType="int" resultMap="columnResultMap">
		SELECT * FROM columns WHERE is_active = true ORDER BY likes DESC, views DESC LIMIT #{limit}
	</select>
    
	<select id="findRecentColumns" parameterType="int" resultMap="columnResultMap">
		SELECT * FROM columns WHERE is_active = true ORDER BY created_at DESC LIMIT #{limit}
	</select>

	<select id="findById" parameterType="int" resultMap="columnResultMap">
		SELECT * FROM columns WHERE id = #{id} AND is_active = true
	</select>

	<select id="findByUserId" parameterType="int" resultMap="columnResultMap">
		SELECT * FROM columns WHERE user_id = #{userId} AND is_active = true ORDER BY created_at DESC
	</select>

	<insert id="insert" parameterType="model.Column" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO columns (user_id, author, author_image, title, content, image, tags, created_at, updated_at)
		VALUES (#{userId}, #{author}, #{authorImage}, #{title}, #{content}, #{image}, 
                #{tags, typeHandler=typehandler.JsonArrayTypeHandler}, NOW(), NOW())
	</insert>

	<update id="update" parameterType="model.Column">
		UPDATE columns SET
		title = #{title},
		content = #{content},
		image = #{image},
		tags = #{tags, typeHandler=typehandler.JsonArrayTypeHandler},
		updated_at = NOW()
		WHERE id = #{id}
	</update>

	<update id="delete" parameterType="int">
		UPDATE columns SET is_active = false, updated_at = NOW() WHERE id = #{id}
	</update>

	<update id="incrementViews" parameterType="int">
		UPDATE columns SET views = views + 1 WHERE id = #{id}
	</update>

	<update id="likeColumn" parameterType="int">
		UPDATE columns SET likes = likes + 1, updated_at = NOW() WHERE id = #{id}
	</update>
	<select id="findRecentByUserId" parameterType="map" resultMap="columnResultMap">
        SELECT * FROM columns 
        WHERE user_id = #{userId} AND is_active = true 
        ORDER BY created_at DESC
        LIMIT #{limit}
    </select>
    
    <!-- 특정 사용자의 최근 칼럼 조회 (피드용) -->
    <select id="getRecentColumnsByUser" parameterType="map" resultMap="columnResultMap">
        SELECT * FROM columns 
        WHERE user_id = #{userId} AND is_active = true 
        ORDER BY created_at DESC
        LIMIT #{limit}
    </select>
    
    <!-- 특정 사용자의 칼럼 개수 조회 (피드용) -->
    <select id="getColumnCountByUser" parameterType="int" resultType="int">
        SELECT COUNT(*) 
        FROM columns 
        WHERE user_id = #{userId} AND is_active = true
    </select>
</mapper>