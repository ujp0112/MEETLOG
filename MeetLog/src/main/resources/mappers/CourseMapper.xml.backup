<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.CourseDAO">

    <!-- Course 결과 매핑 -->
    <resultMap id="CourseResultMap" type="model.Course">
        <id property="id" column="id"/>
        <result property="courseId" column="course_id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="duration" column="duration"/>
        <result property="price" column="price"/>
        <result property="rating" column="rating"/>
        <result property="authorId" column="author_id"/>
        <result property="previewImage" column="preview_image"/>
        <result property="createdAt" column="created_at"/>
        <result property="isPublic" column="is_public"/>
        <result property="restaurantCount" column="restaurant_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="icon" column="icon"/>
    </resultMap>

    <!-- 사용자가 작성한 코스 목록 조회 -->
    <select id="getCoursesByAuthor" parameterType="map" resultMap="CourseResultMap">
        SELECT 
            c.id,
            c.id as course_id,
            c.title,
            c.description,
            c.duration,
            c.price,
            COALESCE(AVG(cr.rating), 0) as rating,
            c.author_id,
            c.preview_image,
            c.created_at,
            c.is_public,
            COUNT(DISTINCT cs.id) as restaurant_count,
            COUNT(DISTINCT cl.id) as like_count,
            '🎓' as icon
        FROM courses c
        LEFT JOIN course_reviews cr ON c.id = cr.course_id
        LEFT JOIN course_steps cs ON c.id = cs.course_id
        LEFT JOIN course_likes cl ON c.id = cl.course_id
        WHERE c.author_id = #{authorId}
        GROUP BY c.id, c.title, c.description, c.duration, c.price, c.author_id, c.preview_image, c.created_at, c.is_public
        ORDER BY c.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 사용자가 작성한 코스 개수 조회 -->
    <select id="getCourseCountByAuthor" parameterType="int" resultType="int">
        SELECT COUNT(*) 
        FROM courses 
        WHERE author_id = #{authorId}
    </select>

    <!-- 코스 ID로 코스 조회 -->
    <select id="getCourseById" parameterType="int" resultMap="CourseResultMap">
        SELECT 
            c.id,
            c.id as course_id,
            c.title,
            c.description,
            c.duration,
            c.price,
            COALESCE(AVG(cr.rating), 0) as rating,
            c.author_id,
            c.preview_image,
            c.created_at,
            c.is_public,
            COUNT(DISTINCT cs.id) as restaurant_count,
            COUNT(DISTINCT cl.id) as like_count,
            '🎓' as icon
        FROM courses c
        LEFT JOIN course_reviews cr ON c.id = cr.course_id
        LEFT JOIN course_steps cs ON c.id = cs.course_id
        LEFT JOIN course_likes cl ON c.id = cl.course_id
        WHERE c.id = #{courseId}
        GROUP BY c.id, c.title, c.description, c.duration, c.price, c.author_id, c.preview_image, c.created_at, c.is_public
    </select>

    <!-- 코스 공개/비공개 토글 -->
    <update id="toggleCoursePublic" parameterType="int">
        UPDATE courses 
        SET is_public = NOT is_public 
        WHERE id = #{courseId}
    </update>

    <!-- 코스 삭제 -->
    <delete id="deleteCourse" parameterType="int">
        DELETE FROM courses 
        WHERE id = #{courseId}
    </delete>

    <!-- 특정 사용자의 최근 코스 조회 (피드용) -->
    <select id="getRecentCoursesByUser" parameterType="map" resultMap="CourseResultMap">
        SELECT 
            c.id,
            c.id as course_id,
            c.title,
            c.description,
            c.duration,
            c.price,
            COALESCE(AVG(cr.rating), 0) as rating,
            c.author_id,
            c.preview_image,
            c.created_at,
            c.is_public,
            COUNT(DISTINCT cs.id) as restaurant_count,
            COUNT(DISTINCT cl.id) as like_count,
            '🎓' as icon
        FROM courses c
        LEFT JOIN course_reviews cr ON c.id = cr.course_id
        LEFT JOIN course_steps cs ON c.id = cs.course_id
        LEFT JOIN course_likes cl ON c.id = cl.course_id
        WHERE c.author_id = #{userId} AND c.is_public = true
        GROUP BY c.id, c.title, c.description, c.duration, c.price, c.author_id, c.preview_image, c.created_at, c.is_public
        ORDER BY c.created_at DESC
        LIMIT #{limit}
    </select>

    <!-- 특정 사용자의 코스 개수 조회 (피드용) -->
    <select id="getCourseCountByUser" parameterType="int" resultType="int">
        SELECT COUNT(*) 
        FROM courses 
        WHERE author_id = #{userId} AND is_public = true
    </select>

</mapper>