<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ReservationDAO">
    <resultMap id="reservationResultMap" type="Reservation" autoMapping="true">
        <id property="id" column="id" />
        <result property="restaurantId" column="restaurant_id" />
        <result property="userId" column="user_id" />
        <result property="customerName" column="customer_name" />
        <result property="customerPhone" column="customer_phone" />
        <result property="reservationDate" column="reservation_date" />
        <result property="reservationTime" column="reservation_time" />
        <result property="partySize" column="party_size" />
        <result property="specialRequests" column="special_requests" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>
    
    <resultMap id="reservationStatsResultMap" type="service.ReservationService$ReservationStats" autoMapping="true">
        <result property="totalReservations" column="total_reservations" />
        <result property="pendingReservations" column="pending_reservations" />
        <result property="confirmedReservations" column="confirmed_reservations" />
        <result property="cancelledReservations" column="cancelled_reservations" />
        <result property="completedReservations" column="completed_reservations" />
    </resultMap>

    <select id="findByRestaurantId" parameterType="int" resultMap="reservationResultMap">
        SELECT r.*, res.name as restaurant_name
        FROM reservations r
        JOIN restaurants res ON r.restaurant_id = res.id
        WHERE r.restaurant_id = #{restaurantId}
        ORDER BY r.reservation_date DESC, r.reservation_time DESC
    </select>
    
    <select id="findById" parameterType="int" resultMap="reservationResultMap">
        SELECT r.*, res.name as restaurant_name
        FROM reservations r
        JOIN restaurants res ON r.restaurant_id = res.id
        WHERE r.id = #{reservationId}
    </select>
    
    <update id="updateStatus" parameterType="map">
        UPDATE reservations 
        SET status = #{status}, updated_at = NOW()
        WHERE id = #{id}
    </update>
    
    <delete id="delete" parameterType="int">
        DELETE FROM reservations WHERE id = #{id}
    </delete>
    
    <select id="findTodayReservations" parameterType="int" resultMap="reservationResultMap">
        SELECT r.*, res.name as restaurant_name
        FROM reservations r
        JOIN restaurants res ON r.restaurant_id = res.id
        WHERE r.restaurant_id = #{restaurantId}
        AND DATE(r.reservation_date) = CURDATE()
        ORDER BY r.reservation_time ASC
    </select>
    
    <select id="getReservationStats" parameterType="int" resultMap="reservationStatsResultMap">
        SELECT 
            COUNT(*) as total_reservations,
            SUM(CASE WHEN status = 'PENDING' THEN 1 ELSE 0 END) as pending_reservations,
            SUM(CASE WHEN status = 'CONFIRMED' THEN 1 ELSE 0 END) as confirmed_reservations,
            SUM(CASE WHEN status = 'CANCELLED' THEN 1 ELSE 0 END) as cancelled_reservations,
            SUM(CASE WHEN status = 'COMPLETED' THEN 1 ELSE 0 END) as completed_reservations
        FROM reservations 
        WHERE restaurant_id = #{restaurantId}
    </select>
    
    <select id="searchReservations" parameterType="map" resultMap="reservationResultMap">
        SELECT
            r.id, r.restaurant_id, r.user_id, r.reservation_date, r.reservation_time,
            r.party_size, r.special_requests, r.status, r.created_at, r.updated_at,
            u.nickname AS user_nickname, u.email AS user_email,
            res.name AS restaurant_name
        FROM reservations r
        JOIN users u ON r.user_id = u.id
        JOIN restaurants res ON r.restaurant_id = res.id
        WHERE res.owner_id = #{userId}
        <if test="keyword != null and keyword != ''">
            AND (u.nickname LIKE CONCAT('%', #{keyword}, '%') 
                OR res.name LIKE CONCAT('%', #{keyword}, '%')
                OR r.special_requests LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="status != null and status != ''">
            AND r.status = #{status}
        </if>
        <if test="restaurantId != null and restaurantId != ''">
            AND r.restaurant_id = #{restaurantId}
        </if>
        <if test="customerName != null and customerName != ''">
            AND u.nickname LIKE CONCAT('%', #{customerName}, '%')
        </if>
        <if test="startDate != null and startDate != ''">
            AND r.reservation_date >= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            AND r.reservation_date <= #{endDate}
        </if>
        ORDER BY r.reservation_date DESC, r.reservation_time DESC
    </select>
</mapper>