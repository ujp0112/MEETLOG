<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.ReviewDAO">
	<resultMap id="reviewResultMap" type="Review"
		autoMapping="true">
		<id property="id" column="id" />
		<result property="restaurantId" column="restaurant_id" />
		<result property="userId" column="user_id" />
		<result property="authorImage" column="author_image" />
		<result property="images" column="images"
			typeHandler="typehandler.JsonArrayTypeHandler" />
		<result property="keywords" column="keywords"
			typeHandler="typehandler.JsonArrayTypeHandler" />
		<result property="isActive" column="is_active" />
		<result property="createdAt" column="created_at" />
		<result property="updatedAt" column="updated_at" />
		<result property="tasteRating" column="taste_rating" />
		<result property="serviceRating" column="service_rating" />
		<result property="atmosphereRating" column="atmosphere_rating" />
		<result property="priceRating" column="price_rating" />
		<result property="visitDate" column="visit_date" />
		<result property="partySize" column="party_size" />
		<result property="visitPurpose" column="visit_purpose" />
		<result property="restaurantName" column="restaurant_name" />
	</resultMap>

	<select id="getRecentReviewsWithInfo" parameterType="int"
		resultType="model.ReviewInfo">
		SELECT
		r.id,
		r.content,
		r.rating,
		r.author,
		r.created_at AS createdAt,
		r.author_image AS authorImage, /* 이 줄을 추가하세요! */
		res.id AS restaurantId,
		res.name AS restaurantName
		FROM
		reviews r
		JOIN
		restaurants res ON r.restaurant_id = res.id
		WHERE
		r.is_active = true
		ORDER BY
		r.created_at DESC
		LIMIT #{limit}
	</select>
	<select id="findRecentReviews" parameterType="int"
		resultMap="reviewResultMap">
		SELECT * FROM reviews WHERE is_active = true ORDER BY
		created_at DESC LIMIT
		#{limit}
	</select>

	<select id="findByRestaurantId" parameterType="int"
		resultMap="reviewResultMap">
		SELECT * FROM reviews WHERE restaurant_id = #{restaurantId}
		AND is_active =
		true ORDER BY created_at DESC
	</select>

	<select id="findByUserId" parameterType="int"
		resultMap="reviewResultMap">
		SELECT * FROM reviews WHERE user_id = #{userId} AND
		is_active = true ORDER
		BY created_at DESC
	</select>

	<insert id="insert" parameterType="Review"
		useGeneratedKeys="true" keyProperty="id">
		INSERT INTO reviews
		(restaurant_id, user_id, author, author_image, rating,
		content, images, keywords, taste_rating, service_rating, 
		atmosphere_rating, price_rating, visit_date, party_size, 
		visit_purpose, created_at, updated_at)
		VALUES (#{restaurantId}, #{userId},
		#{author}, #{authorImage}, #{rating},
		#{content},
		#{images, typeHandler=typehandler.JsonArrayTypeHandler},
		#{keywords, typeHandler=typehandler.JsonArrayTypeHandler}, 
		#{tasteRating}, #{serviceRating}, #{atmosphereRating}, 
		#{priceRating}, #{visitDate}, #{partySize}, #{visitPurpose}, 
		NOW(), NOW())
	</insert>

	<update id="delete" parameterType="int">
		UPDATE reviews SET is_active =
		false, updated_at = NOW() WHERE id = #{id}
	</update>

	<update id="likeReview" parameterType="int">
		UPDATE reviews SET likes =
		likes + 1, updated_at = NOW() WHERE id = #{id}
	</update>
<<<<<<< HEAD

	<!-- 사업자별 최근 리뷰 조회 -->
	<select id="findRecentReviewsByOwnerId" parameterType="map" resultMap="reviewResultMap">
		SELECT r.*, res.name as restaurant_name 
		FROM reviews r
=======
	
	<select id="findRecentReviewsByOwnerId" parameterType="map" resultMap="reviewResultMap">
		SELECT r.*, res.name as restaurant_name FROM reviews r
>>>>>>> 0964c5034709fc22f4307bc36d412f3659e9c08d
		JOIN restaurants res ON r.restaurant_id = res.id
		WHERE res.owner_id = #{ownerId} AND r.is_active = true
		ORDER BY r.created_at DESC
		LIMIT #{limit}
	</select>
<<<<<<< HEAD
=======
	
	<select id="searchReviews" parameterType="map" resultMap="reviewResultMap">
		SELECT r.*, res.name as restaurant_name FROM reviews r
		JOIN restaurants res ON r.restaurant_id = res.id
		WHERE res.owner_id = #{userId} AND r.is_active = true
		<if test="keyword != null and keyword != ''">
			AND (r.content LIKE CONCAT('%', #{keyword}, '%') 
				OR r.author LIKE CONCAT('%', #{keyword}, '%')
				OR res.name LIKE CONCAT('%', #{keyword}, '%'))
		</if>
		<if test="minRating != null and minRating != ''">
			AND r.rating >= #{minRating}
		</if>
		<if test="maxRating != null and maxRating != ''">
			AND r.rating <= #{maxRating}
		</if>
		<if test="restaurantId != null and restaurantId != ''">
			AND r.restaurant_id = #{restaurantId}
		</if>
		<if test="startDate != null and startDate != ''">
			AND r.created_at >= #{startDate}
		</if>
		<if test="endDate != null and endDate != ''">
			AND r.created_at <= #{endDate}
		</if>
		ORDER BY r.created_at DESC
	</select>
>>>>>>> 0964c5034709fc22f4307bc36d412f3659e9c08d
</mapper>