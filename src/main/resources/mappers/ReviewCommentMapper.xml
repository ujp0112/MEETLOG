<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ReviewCommentDAO">
    <resultMap id="reviewCommentResultMap" type="ReviewComment" autoMapping="true">
        <id property="id" column="id" />
        <result property="reviewId" column="review_id" />
        <result property="userId" column="user_id" />
        <result property="isOwnerReply" column="is_owner_reply" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <select id="findByReviewId" parameterType="int" resultMap="reviewCommentResultMap">
        SELECT rc.*, u.nickname as author_name
        FROM review_comments rc
        JOIN users u ON rc.user_id = u.id
        WHERE rc.review_id = #{reviewId}
        ORDER BY rc.created_at ASC
    </select>
    
    <select id="findById" parameterType="int" resultMap="reviewCommentResultMap">
        SELECT rc.*, u.nickname as author_name
        FROM review_comments rc
        JOIN users u ON rc.user_id = u.id
        WHERE rc.id = #{commentId}
    </select>
    
    <insert id="insert" parameterType="ReviewComment" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO review_comments (review_id, user_id, content, is_owner_reply, created_at, updated_at)
        VALUES (#{reviewId}, #{userId}, #{content}, #{isOwnerReply}, NOW(), NOW())
    </insert>
    
    <update id="update" parameterType="ReviewComment">
        UPDATE review_comments 
        SET content = #{content}, updated_at = NOW()
        WHERE id = #{id}
    </update>
    
    <delete id="delete" parameterType="int">
        DELETE FROM review_comments WHERE id = #{id}
    </delete>
</mapper>